{"version":3,"sources":["Components/Navbar/NavbarElements.js","Components/Navbar/1.png","Components/SearchBar/services.js","Components/SearchBar/SearchBar.js","Components/Navbar/index.js","Components/Card/Card.js","Components/Card/Cardfeed.js","Components/SubCom/ComCard.js","Components/Pages/index.js","Components/Community/Login/services.js","Components/Community/Login/Login.js","Components/Community/Login/Modal/Modal.js","Components/richeditor/index.js","Components/loader/index.js","Components/statusmessage/index.js","Components/Community/Community.js","Components/newpost/index.js","App.js","index.js"],"names":["Nav","styled","nav","Logo","img","NavLink","Link","NavBtnLink","FaBars","NavBtnLink2","search","filter","limit","offset","a","axios","get","response","status","body","error","data","console","log","SearchBar","placeholder","useState","filteredData","setFilteredData","searchFilter","setSearchFilter","useEffect","fetchFilteredData","communities","className","type","value","onChange","event","target","length","id","onClick","map","community","href","rel","name","Navbar","to","src","Img","alt","BookData","MultiActionAreaCard","post","Card","sx","margin","boxShadow","width","CardActionArea","CardContent","Typography","gutterBottom","variant","align","title","st","display","user","content","CardActions","IconButton","size","Cardfeed","posts","setPosts","then","res","Grid","container","direction","alignItems","maxWidth","component","Home","login","credentials","token","localStorage","setItem","JSON","stringify","Login","submitting","setSubmitting","username","setUsername","password","setPassword","submitTimeOut","setTimeout","handleLoginSubmit","preventDefault","userObj","onSubmit","disabled","htmlFor","e","Modal","modal","setModal","toggleModal","document","classList","add","remove","RichEditor","props","convertToEditorState","editorState","EditorState","createEmpty","contentState","convertFromRaw","parse","createWithContent","ContentState","createFromText","onEditorStateChange","setState","state","newProps","newEditorState","newContent","this","readOnly","wrapperClassName","toolbarClassName","editorClassName","handleBeforeInput","handlePastedText","uploadImageCallBack","toolbar","options","inline","inDropdown","list","textAlign","link","image","uploadCallback","present","previewImage","fontFamily","toolbarHidden","Component","Loader","StatusMessage","loading","loadingClassName","loadingMessage","errorClassName","errorMessage","success","successClassName","successMessage","nothing","nothingClassName","nothingMessage","Dialog","attached","icon","Content","Icon","Header","positive","Community","App","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.906bb5a3.chunk.js","sourcesContent":["import {NavLink as Link} from 'react-router-dom'\nimport {FaBars} from 'react-icons/fa'\nimport styled from 'styled-components'\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Nav= styled.nav`\n    background:#012c3d;\n    height: 80px;\n    display: flex;\n    flex-direction:row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem ;\n    z-index: 10;\n`\nexport const Logo = styled.img`\n    height:79px;\n`\nexport const NavLink = styled(Link)`\n    color:#fff;\n    \n    text-decoration: none;\n    padding: 0 1rem;\n    \n    cursor: pointer;\n    &.active {\n        color:#15cdfc;\n    }\n`\n\nexport const Bars =styled(FaBars)`\n    color: #fff;\n\n    @media screen and (max-width: 768px) {\n        display:;\n        postion:;\n        top: 0;\n        right: 0;\n        transform: translate(-100%, 75%);\n        font-size: 1.8rem;\n        cursor: pointer;      \n    \n`\n\n\nexport const NavBtnLink = styled(Link)`\n    border-radius: 4px;\n    background: rgb(236, 112, 11);\n    padding: 10px 22px;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    margin-right: 24px;\n\n    @media screen and (max-width: 768px) {\n        display: none;\n    }\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #fff;\n        color: #010606;\n    }\n`\nexport const NavBtnLink2 = styled(Link)`\n    border-radius: 4px;\n    background: rgb(236, 112, 11);\n    padding: 6px 10px;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    margin-right: 24px;\n\n    @media screen and (max-width: 768px) {\n        display: none;\n    }\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #fff;\n        color: #010606;\n    }\n`","export default __webpack_public_path__ + \"static/media/1.654aa425.png\";","import axios from \"axios\";\n\nconst search = async (filter, limit, offset) => {\n  try {\n    const response = await axios.get(\n      `/api/sub/search?filter=${filter}&limit=${limit || 10}&offset=${\n        offset || 0\n      }`\n    );\n    if (response.status === 500 || response.status === 400) {\n      throw response.body.error;\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { search };\n","import React, { useEffect, useState } from \"react\";\nimport \"./SearchBar.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { search } from \"./services\";\n\nfunction SearchBar({ placeholder, data }) {\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchFilter, setSearchFilter] = useState(\"\");\n\n  const handleFilter = (event) => {\n    setSearchFilter(event.target.value);\n  };\n\n  //Will run everytime searchFilter is changed.\n  useEffect(() => {\n    try {\n      //use Effects callback is not async so wrapper async function is required.\n      const fetchFilteredData = async () => {\n        if (searchFilter === \"\") {\n          setFilteredData([]);\n          return;\n        }\n        //calling search community. returns a array.\n        const communities = await search(searchFilter);\n        setFilteredData(communities);\n      };\n      //calling wrapper function.\n      fetchFilteredData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchFilter]);\n  const clearInput = () => {\n    setFilteredData([]);\n    setSearchFilter(\"\");\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"searchInputs\">\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={searchFilter}\n          onChange={handleFilter}\n        />\n        <div className=\"searchIcon\">\n          {filteredData.length === 0 ? (\n            <SearchIcon />\n          ) : (\n            <CloseIcon id=\"clearBtn\" onClick={clearInput} />\n          )}\n        </div>\n      </div>\n      {filteredData.length !== 0 && (\n        <div className=\"dataResult\">\n          {filteredData.map((community) => {\n            return (\n              <a\n                className=\"dataItem\"\n                key={community.id}\n                href={`/api/sub/${community.id}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <p>{community.name} </p>\n              </a>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import './Navbar.css'\nimport React from \"react\";\nimport {\n  Nav,\n  Bars,\n  NavMenu,\n  NavBtn,\n  Logo,\n  NavLink,\n  NavBtnLink,\n  NavBtnLink2,\n} from \"./NavbarElements\";\nimport Img from \"./1.png\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport BookData from \"../Data.json\";\nimport AddIcon from '@mui/icons-material/Add';\n\nconst Navbar = () => {\n  return (\n    <>\n      <Nav>\n        <NavLink to=\"/\">\n          <Logo src={Img} alt=\"pic\" />\n        </NavLink>\n        {/* <Bars /> */}\n        <SearchBar placeholder=\"Search\" data={BookData} />\n        <NavBtnLink to=\"/signin\">Sign In</NavBtnLink>\n        <NavBtnLink2 className=\"plus\" to=\"/community\"><AddIcon/></NavBtnLink2>\n      </Nav>\n    </>\n  );\n};\n\n\nexport default Navbar;\n","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActionArea, CardActions, Grid } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ShareIcon from '@mui/icons-material/Share';\nimport Share from '@mui/icons-material/Share';\nimport Img from './images.jpg'\nimport { ImagesearchRoller } from '@mui/icons-material';\n\n\nexport default function MultiActionAreaCard({post}) {\n  return (\n    <Card sx={{margin: 2.5,boxShadow: 5,width:\"60%\" }} key= {post.id}>\n      <CardActionArea>\n      <CardContent>\n          <Typography gutterBottom variant=\"h4\" align=\"Left\">\n            {post.title}\n          </Typography>\n          <Typography gutterBottom variant=\"h6\" align=\"left\"  st>\n            {post.community}\n          </Typography>\n          <Typography gutterBottom variant=\"h7\" display=\"grid\" align=\"left\">\n            {post.user}\n          </Typography>\n          <Typography>\n            {post.content}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n          <IconButton size=\"small\">\n            10 <ArrowDropUpIcon/>\n          </IconButton>\n          <IconButton size=\"small\">\n            <ArrowDropDownIcon/>\n          </IconButton>\n          <IconButton size=\"small\">\n            <Share/>\n          </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","import MultiActionAreaCard from \"./Card\";\nimport {useState,useEffect} from \"react\";\nimport axios from \"axios\";\nconst Cardfeed = ()=>{\n    const [posts, setPosts] = useState([]);\n    useEffect(() => {\n        axios.get(\"/api/posts\").then((res) => setPosts(res.data));\n    }, []);\n    return (\n        <div className=\"Posts\">\n            {posts.map((post) => (\n                <MultiActionAreaCard\n                    key={post.id}\n                    post={post}\n                />\n            ))}\n        </div>\n    );\n};\nexport default Cardfeed;","import Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport React from 'react'\nimport { Grid, List } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\n\nexport default function MultiActionAreaCard() {\n    return(\n        <Grid container direction=\"column\" alignItems=\"flex-end\">\n            <Card sx={{ maxWidth: 345 }}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h8\" component=\"div\">\n            The recommendation system will show the content on this part.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n        </Grid>\n\n\n        \n          );\n}","import React from 'react'\nimport Cardfeed from '../Card/Cardfeed'\nimport ComCard from '../SubCom/ComCard';\nimport './pages.css'\nconst Home = () => {\n    return (\n        <div className=\"parentcard\">\n        <div className=\"card\" > \n            <Cardfeed/>\n            \n        </div>\n\n        <div className=\"comcard\">\n            <ComCard/>\n        </div>\n        </div>\n    )\n}\n\nexport default Home","import axios from \"axios\";\n\nconst login = async (credentials) => {\n    try {\n        const response = await axios.post(\"/api/login\", credentials);\n        if (response.status === 401 || response.status === 404) {\n            throw response.body.error;\n        }\n        if (response.data.token) {\n            localStorage.setItem(\"user\", JSON.stringify(response.data.token));\n        }\n        return response.data;\n    } catch (error) {\n        //TODO: Add a notification or something like that.\n        console.log(error);\n    }\n};\n\nconst register = async (credentials) => {\n    try {\n        const response = await axios.post(\"/api/users\", credentials);\n        if (response.status === 400 || response.status === 404) {\n            throw response.body.error;\n        }\n        return response.data;\n    } catch (error) {\n        //TODO: Add a notification or something like that.\n        console.log(error);\n    }\n};\n\nconst logout = () => {\n    localStorage.removeItem(\"user\");\n};\n\nexport { login, register, logout };\n","import { useState } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport { login, register } from \"./services\";\nconst Login = () => {\n    const [submitting, setSubmitting] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const submitTimeOut = () => {\n        setSubmitting(true);\n        setTimeout(() => {\n            setSubmitting(false);\n        }, 3000);\n    };\n    const handleRegisterSubmit = async (event) => {\n        event.preventDefault();\n        const userObj = await register({ username, password, email });\n        console.log(userObj);\n        setUsername(\"\");\n        setPassword(\"\");\n        setEmail(\"\");\n        submitTimeOut();\n    };\n    const handleLoginSubmit = async (event) => {\n        event.preventDefault();\n        const userObj = await login({ username, password });\n        // setUser(userObj);\n        console.log(\"In LoginForm\", userObj);\n        setUsername(\"\");\n        setPassword(\"\");\n        submitTimeOut();\n    };\n    return (\n        <div className=\"login-wrapper\">\n            <div className=\"loginForm wrapper\">\n                <form onSubmit={handleLoginSubmit}>\n                    {submitting && <div>Logging you in....</div>}\n                    <fieldset disabled={submitting}>\n                        <label htmlFor=\"username\">\n                            <p>Username</p>\n                            <input\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                                type=\"text\"\n                                name=\"username\"\n                                id=\"username\"\n                            />\n                        </label>\n                        <label htmlFor=\"password\">\n                            <p>Password</p>\n                            <input\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"login-password\"\n                            />\n                        </label>\n                    </fieldset>\n                    <button disabled={submitting} type=\"submit\">\n                        Login\n                    </button>\n                </form>\n            </div>\n            {/* <LoginForm\n                username={username}\n                password={password}\n                handleLoginSubmit={handleLoginSubmit}\n                submitting={submitting}\n            />\n            <RegisterForm\n                password={password}\n                handleRegisterSubmit={handleRegisterSubmit}\n                submitting={submitting}\n            /> */}\n        </div>\n    );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"./Modal.css\";\nimport Login from \"../Login\";\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Home from \"../../../Pages\";\n\n\nexport default function Modal() {\n  const [modal, setModal] = useState(true);\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  if(modal) {\n    document.body.classList.add('active-modal')\n  } else {\n    document.body.classList.remove('active-modal')\n  }\n\n  return (\n    <>\n  \n      {modal && (\n        <div className=\"modal\">\n          <div onClick={toggleModal} className=\"overlay\"></div>\n          <div className=\"modal-content\">\n          <IconButton size=\"small\" className=\"close-modal\" onClick={toggleModal}>\n            <CloseIcon/>\n          </IconButton>\n          <Login/>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}","import React, {Component} from 'react';\nimport {EditorState, ContentState, convertFromRaw} from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './styles.css';\nimport {Editor} from 'react-draft-wysiwyg';\n// import {imageUploadApi} from '../../api/image';\n\nexport default class RichEditor extends Component {\n  constructor(props) {\n    super(props);\n    let {content, editorState} = this.props;\n    editorState = editorState || this.convertToEditorState(content);\n    this.state = {\n      editorState,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const {editorState: newEditorState, content: newContent} = newProps;\n    const editorState = newEditorState || this.convertToEditorState(newContent);\n    this.setState({\n      editorState,\n    });\n  }\n\n  convertToEditorState = content => {\n    let editorState = EditorState.createEmpty();\n    if (content) {\n      try {\n        const contentState = convertFromRaw(JSON.parse(content));\n        editorState = EditorState.createWithContent(contentState);\n      } catch (error) {\n        const contentState = ContentState.createFromText(content);\n        editorState = EditorState.createWithContent(contentState);\n      }\n    }\n    return editorState;\n  };\n\n  onEditorStateChange = editorState => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  // uploadImageCallBack = file => {\n  //   return new Promise((resolve, reject) => {\n  //     imageUploadApi(file, false)\n  //       .then(response => {\n  //         /* react-draft-wywsgi need data.link as the uploaded image url\n  //         so we had to slightly modify the result from cloudinary response */\n  //         let newResponse = {\n  //           data: {\n  //             link: response.data.secure_url,\n  //           },\n  //         };\n  //         resolve(newResponse);\n  //       })\n  //       .catch(error => {\n  //         reject(error);\n  //       });\n  //   });\n  // };\n\n  render() {\n    const {\n      readOnly,\n      wrapperClassName,\n      toolbarClassName,\n      editorClassName,\n      handleBeforeInput,\n      handlePastedText,\n      onEditorStateChange,\n      editorState,\n      uploadImageCallBack,\n      placeholder,\n    } = this.props;\n    return (\n      <Editor\n        toolbar={{\n          options: [\n            'inline',\n            'blockType',\n            'fontSize',\n            'fontFamily',\n            'list',\n            'textAlign',\n            'colorPicker',\n            'link',\n            'emoji',\n            'image',\n            'history',\n          ],\n          inline: {inDropdown: true},\n          list: {inDropdown: true},\n          textAlign: {inDropdown: true},\n          link: {inDropdown: true},\n          image: {\n            uploadCallback: uploadImageCallBack || this.uploadImageCallBack,\n            alt: {present: true},\n            previewImage: true,\n          },\n          fontFamily: {\n            options: [\n              'Arial',\n              'Georgia',\n              'Impact',\n              'Tahoma',\n              'Roboto',\n              'Times New Roman',\n              'Verdana',\n            ],\n          },\n        }}\n        editorState={editorState || this.state.editorState}\n        wrapperClassName={wrapperClassName || 'richEditor-wrapper'}\n        toolbarClassName={toolbarClassName || 'richEditor-toolbar'}\n        editorClassName={editorClassName || 'richEditor-editor'}\n        onEditorStateChange={onEditorStateChange || this.onEditorStateChange}\n        readOnly={readOnly}\n        toolbarHidden={readOnly}\n        handleBeforeInput={handleBeforeInput}\n        handlePastedText={handlePastedText}\n        placeholder={placeholder}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport './styles.css';\n\nconst Loader = props => {\n  return (\n    <div className={props.className || 'loader'}>\n      <div className=\"loader-spinning-wheel\" />\n    </div>\n  );\n};\nexport default Loader;\n","import React, {Component} from 'react';\nimport {Icon, Dialog} from '@material-ui/core';\nimport Loader from '../loader';\nimport './styles.css';\n\nexport default class StatusMessage extends Component {\n  render() {\n    const {\n      loading,\n      loadingClassName,\n      loadingMessage,\n      error,\n      errorClassName,\n      errorMessage,\n      success,\n      successClassName,\n      successMessage,\n      nothing,\n      nothingClassName,\n      nothingMessage,\n      type,\n    } = this.props;\n\n    if (loading) {\n      if (type === 'modal') {\n        return (\n          <div className={loadingClassName || 'statusMessage-modal'}>\n            <Dialog attached icon>\n              <Dialog.Content>\n                <Icon name=\"circle notched\" loading size=\"big\" />\n                {loadingMessage || 'Loading ...'}\n              </Dialog.Content>\n            </Dialog>\n          </div>\n        );\n      }\n      return (\n        <div className={loadingClassName || 'statusMessage-default'}>\n          <Loader/>\n          <br />\n          <Dialog size=\"tiny\">\n            <Dialog.Content>\n              <Dialog.Header>Just few seconds</Dialog.Header>\n              {loadingMessage || 'We are fetching the content for you.'}\n            </Dialog.Content>\n          </Dialog>\n        </div>\n      );\n    } else if (error) {\n      if (type === 'modal') {\n        return (\n          <div className={errorClassName || 'statusMessage-modal'}>\n            <Dialog attached error icon>\n              <Dialog.Content>\n                <Icon name=\"thumbs outline down\" size=\"big\" />\n                {errorMessage || error || 'Sorry, something went wrong'}\n              </Dialog.Content>\n            </Dialog>\n          </div>\n        );\n      }\n      return (\n        <div className={errorClassName || 'statusMessage-default'}>\n          <Dialog error>\n            <Dialog.Content>\n              <Icon name=\"thumbs outline down\" size=\"big\" />\n              {errorMessage || error || 'Sorry, something went wrong'}\n            </Dialog.Content>\n          </Dialog>\n        </div>\n      );\n    } else if (success) {\n      if (type === 'modal') {\n        return (\n          <div className={successClassName || 'statusMessage-modal'}>\n            <Dialog attached positive icon>\n              <Dialog.Content>\n                <Icon name=\"thumbs outline up\" size=\"big\" />\n                {successMessage || 'Successful'}\n              </Dialog.Content>\n            </Dialog>\n          </div>\n        );\n      }\n      return (\n        <div className={successClassName || 'statusMessage-default'}>\n          <Dialog positive>\n            <Dialog.Content>\n              <Icon name=\"thumbs outline up\" size=\"big\" />\n              {successMessage || 'Successful'}\n            </Dialog.Content>\n          </Dialog>\n        </div>\n      );\n    } else if (nothing) {\n      if (type === 'modal') {\n        return (\n          <div className={nothingClassName || 'statusMessage-modal'}>\n            <Dialog attached error icon>\n              <Dialog.Content>\n                <Icon name=\"thumbs outline down\" size=\"big\" />\n                {nothingMessage || 'Successful'}\n              </Dialog.Content>\n            </Dialog>\n          </div>\n        );\n      }\n      return (\n        <div className={nothingClassName || 'statusMessage-default'}>\n          <Dialog error>\n            <Dialog.Content>\n              <Icon name=\"thumbs outline down\" size=\"big\" />\n              {nothingMessage || 'Nothing to display'}\n            </Dialog.Content>\n          </Dialog>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n","import './Community.css'\nimport React from 'react'\nimport Newpost from \"../newpost/index\"\nimport RichEditor from '../richeditor'\nimport { Button } from '@material-ui/core'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport const Community = () => {\n    return (\n        <div>\n          <input className=\"Title\" \n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                        \n          />\n          <input className=\"Tags\"\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Tags\"\n                        \n          />\n          <RichEditor/>\n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport {getSelectedBlocks} from 'draft-js-utils'\nimport htmlToDraft from 'html-to-draftjs';\nimport {List} from 'immutable';\nimport {EditorState, convertToRaw, Modifier} from 'draft-js';\nimport {Icon, Button} from '@material-ui/core';\nimport './styles.css';\nimport RichEditor from '../richeditor'\nimport StatusMessage from '../statusmessage';\nimport { TextField } from '@material-ui/core';\n\nexport default class NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const {success} = newProps;\n    if (success) {\n      this.setState({\n        editorState: EditorState.createEmpty(),\n      });\n    }\n  }\n\n  onEditorStateChange = editorState => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  onSubmit = () => {\n    const {editorState} = this.state;\n    const {threadID, createPost} = this.props;\n    const content = JSON.stringify(\n      convertToRaw(editorState.getCurrentContent()),\n    );\n    let newPost = {\n      thread_id: threadID,\n      content: content,\n    };\n    createPost(newPost);\n  };\n\n  isValidLength = contentState => {\n    const maxLength = this.props.maxLength || 1000;\n    return contentState.getPlainText('').length <= maxLength;\n  };\n\n  handleBeforeInput = input => {\n    const {editorState} = this.state;\n    if (!this.isValidLength(editorState.getCurrentContent())) {\n      return 'handled';\n    }\n  };\n\n  handlePastedText = (text, html, editorState, onChange) => {\n    if (html) {\n      const contentBlock = htmlToDraft(html);\n      let contentState = editorState.getCurrentContent();\n      contentBlock.entityMap.forEach((value, key) => {\n        contentState = contentState.mergeEntityData(key, value);\n      });\n      contentState = Modifier.replaceWithFragment(\n        contentState,\n        editorState.getSelection(),\n        new List(contentBlock.contentBlocks),\n      );\n      if (!this.isValidLength(contentState)) {\n        return 'handled';\n      }\n      onChange(\n        EditorState.push(editorState, contentState, 'insert-characters'),\n      );\n      return true;\n    }\n    const selectedBlock = getSelectedBlocks(editorState);\n    const newState = Modifier.replaceText(\n      editorState.getCurrentContent(),\n      editorState.getSelection(),\n      text,\n      editorState.getCurrentInlineStyle(),\n    );\n    if (!this.isValidLength(newState)) {\n      return 'handled';\n    }\n    onChange(EditorState.push(editorState, newState, 'insert-characters'));\n    if (selectedBlock && selectedBlock.type === 'code') {\n      return true;\n    }\n    return false;\n  };\n\n  render() {\n    const {isAuthenticated, isLoading, error} = this.props;\n    if (!isAuthenticated) {\n      return (\n        <div className=\"newPost-none\">{'Please sign in to post a reply'}</div>\n      );\n    }\n    const {editorState} = this.state;\n    const statusMessage = (\n      <StatusMessage\n        error={error}\n        errorClassName=\"newPost-message\"\n        errorMessage={error || 'Oops! Something went wrong.'}\n        type=\"modal\"\n      />\n    );\n\n    return (\n      <div className=\"newPost-show\">\n        {statusMessage}\n        <TextField loading={isLoading} className=\"attached fluid segment\">\n          <RichEditor\n            placeholder=\"Start typing your post content here...\"\n            editorState={editorState}\n            wrapperClassName=\"newPost-wrapper\"\n            toolbarClassName=\"newPost-toolbar\"\n            editorClassName=\"newPost-editor\"\n            onEditorStateChange={this.onEditorStateChange}\n            handleBeforeInput={this.handleBeforeInput}\n            handlePastedText={this.handlePastedText}\n          />\n          <Button\n            color=\"blue\"\n            size=\"small\"\n            loading={isLoading}\n            disabled={isLoading}\n            onClick={this.onSubmit}>\n            <Icon name=\"write\" />\n            Post\n          </Button>\n        </TextField>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/Pages\";\r\nimport Modal from \"./Components/Community/Login/Modal/Modal\";\r\nimport { Community } from \"./Components/Community/Community\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n      </Switch>\r\n      <Switch >\r\n        <Modal path=\"/signin\" exact component={Home}/>\r\n      </Switch>\r\n      <Switch>\r\n        <Route path=\"/community\" exact component={Community} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}